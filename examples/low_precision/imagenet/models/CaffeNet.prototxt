name: "VGG16"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "../../../../data/ILSVRC2015/Data/CLS-LOC/imagenet_mean.binaryproto"
  }
# mean pixel / channel-wise mean instead of mean image
#  transform_param {
#    crop_size: 227
#    mean_value: 104
#    mean_value: 117
#    mean_value: 123
#    mirror: true
#  }
  data_param {
    source: "../../../../data/ILSVRC2015/Data/CLS-LOC/ilsvrc12_train_lmdb"
    batch_size: 256
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "../../../../data/ILSVRC2015/Data/CLS-LOC/imagenet_mean.binaryproto"
  }
# mean pixel / channel-wise mean instead of mean image
#  transform_param {
#    crop_size: 227
#    mean_value: 104
#    mean_value: 117
#    mean_value: 123
#    mirror: false
#  }
  data_param {
    source: "../../../../data/ILSVRC2015/Data/CLS-LOC/ilsvrc12_val_lmdb"
    batch_size: 50
    backend: LMDB
  }
}
layer {
  name: "conv_1"
  type: "Convolution"
  bottom: "data"
  top: "conv_1"
  param {
    lr_mult: 1
    decay_mult: 1
   }
  param {
    lr_mult: 2
    decay_mult: 0
   }
  convolution_param {
    num_output: 96
    stride: 4
    kernel_size: 11
    pad: 0
    group: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
   }
    bias_filler {
      type: "constant"
      value: 0.0
   }
  }
}
layer {
  name: "relu_2"
  type: "ReLU"
  bottom: "conv_1"
  top: "conv_1"
}
layer {
  name: "pool_2"
  type: "Pooling"
  bottom: "conv_1"
  top: "pool_2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm_3"
  type: "LRN"
  bottom: "pool_2"
  top: "norm_3"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv_4"
  type: "Convolution"
  bottom: "norm_3"
  top: "conv_4"
  param {
    lr_mult: 1
    decay_mult: 1
   }
  param {
    lr_mult: 2
    decay_mult: 0
   }
  convolution_param {
    num_output: 256
    stride: 1
    kernel_size: 5
    pad: 2
    group: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
   }
    bias_filler {
      type: "constant"
      value: 0.0
   }
  }
}
layer {
  name: "relu_5"
  type: "ReLU"
  bottom: "conv_4"
  top: "conv_4"
}
layer {
  name: "pool_5"
  type: "Pooling"
  bottom: "conv_4"
  top: "pool_5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm_6"
  type: "LRN"
  bottom: "pool_5"
  top: "norm_6"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv_7"
  type: "Convolution"
  bottom: "norm_6"
  top: "conv_7"
  param {
    lr_mult: 1
    decay_mult: 1
   }
  param {
    lr_mult: 2
    decay_mult: 0
   }
  convolution_param {
    num_output: 384
    stride: 1
    kernel_size: 3
    pad: 1
    group: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
   }
    bias_filler {
      type: "constant"
      value: 0.0
   }
  }
}
layer {
  name: "relu_8"
  type: "ReLU"
  bottom: "conv_7"
  top: "conv_7"
}
layer {
  name: "conv_8"
  type: "Convolution"
  bottom: "conv_7"
  top: "conv_8"
  param {
    lr_mult: 1
    decay_mult: 1
   }
  param {
    lr_mult: 2
    decay_mult: 0
   }
  convolution_param {
    num_output: 384
    stride: 1
    kernel_size: 3
    pad: 1
    group: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
   }
    bias_filler {
      type: "constant"
      value: 0.0
   }
  }
}
layer {
  name: "relu_9"
  type: "ReLU"
  bottom: "conv_8"
  top: "conv_8"
}
layer {
  name: "conv_9"
  type: "Convolution"
  bottom: "conv_8"
  top: "conv_9"
  param {
    lr_mult: 1
    decay_mult: 1
   }
  param {
    lr_mult: 2
    decay_mult: 0
   }
  convolution_param {
    num_output: 256
    stride: 1
    kernel_size: 3
    pad: 1
    group: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
   }
    bias_filler {
      type: "constant"
      value: 0.0
   }
  }
}
layer {
  name: "relu_10"
  type: "ReLU"
  bottom: "conv_9"
  top: "conv_9"
}
layer {
  name: "pool_10"
  type: "Pooling"
  bottom: "conv_9"
  top: "pool_10"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc_11"
  type: "InnerProduct"
  bottom: "pool_10"
  top: "fc_11"
  param {
    lr_mult: 1
    decay_mult: 1
   }
  param {
    lr_mult: 2
    decay_mult: 0
   }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
   }
    bias_filler {
      type: "constant"
      value: 0.1
   }
  }
}
layer {
  name: "relu_12"
  type: "ReLU"
  bottom: "fc_11"
  top: "fc_11"
}
layer {
  name: "fc_12"
  type: "InnerProduct"
  bottom: "fc_11"
  top: "fc_12"
  param {
    lr_mult: 1
    decay_mult: 1
   }
  param {
    lr_mult: 2
    decay_mult: 0
   }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
   }
    bias_filler {
      type: "constant"
      value: 0.1
   }
  }
}
layer {
  name: "relu_13"
  type: "ReLU"
  bottom: "fc_12"
  top: "fc_12"
}
layer {
  name: "fc_13"
  type: "InnerProduct"
  bottom: "fc_12"
  top: "fc_13"
  param {
    lr_mult: 1
    decay_mult: 1
   }
  param {
    lr_mult: 2
    decay_mult: 0
   }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.005
   }
    bias_filler {
      type: "constant"
      value: 0.1
   }
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc_13"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc_13"
  bottom: "label"
  top: "loss"
}
